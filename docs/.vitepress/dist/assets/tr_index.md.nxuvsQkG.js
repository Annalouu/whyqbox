import{_ as t,c as e,o as s,a2 as i}from"./chunks/framework.CB8EpGC0.js";const y=JSON.parse('{"title":"","description":"","frontmatter":{"layout":"home","hero":{"name":"neden.qbox?","text":"- neden olmasın?","tagline":"ördekler her zaman tatlıdır!","image":{"src":"https://i.pinimg.com/564x/b0/69/d3/b069d3bd78a81e7bd800897e75af6f17.jpg","alt":"Qbox Duck"}}},"headers":[],"relativePath":"tr/index.md","filePath":"tr/index.md"}'),a={name:"tr/index.md"},r=i(`<h2 id="can-you-briefly-explain-what-this-qbox" tabindex="-1">can you briefly explain what this qbox? <a class="header-anchor" href="#can-you-briefly-explain-what-this-qbox" aria-label="Permalink to &quot;can you briefly explain what this qbox?&quot;">​</a></h2><div class="info custom-block"><p class="custom-block-title">🤷‍♂️ It won&#39;t take too much of your time</p><p>While originally forked from <strong>QBCore</strong>, many <strong>Qbox resources have been refactored to improve code quality, enhance security, lower performance overhead</strong>, and integrate with <strong>overextended</strong> resources.</p></div><h2 id="🤷‍♂️-how-qbox-differs-from-qbcore" tabindex="-1">🤷‍♂️ How <strong>qbox</strong> differs from <strong>qbcore</strong>? <a class="header-anchor" href="#🤷‍♂️-how-qbox-differs-from-qbcore" aria-label="Permalink to &quot;🤷‍♂️ How **qbox** differs from **qbcore**?&quot;">​</a></h2><div class="info custom-block"><p class="custom-block-title">It won&#39;t take too much of your time</p><p>While originally forked from QBCore, many Qbox resources have been refactored to improve code quality, increase security, reduce performance, and integrate with extended resources. Where appropriate, Qbox also integrates directly with other open source projects, rather than keeping lower-level resources in-house.</p><p>Qbox maintains high quality standards with a strong community of regular contributors. As time progresses, you can expect greater differences in features for players.</p></div><h2 id="🤷‍♂️-do-qbcore-scripts-work-in-qbox" tabindex="-1">🤷‍♂️ Do qbcore scripts work in qbox? <a class="header-anchor" href="#🤷‍♂️-do-qbcore-scripts-work-in-qbox" aria-label="Permalink to &quot;🤷‍♂️ Do qbcore scripts work in qbox?&quot;">​</a></h2><div class="info custom-block"><p class="custom-block-title">It won&#39;t take too much of your time</p><p>Yes (in most cases).</p><p>We have created a bridge layer for backward compatibility with documented and correct qb-core usage paths, and you can continue to use most QBCore scripts without any changes.</p></div><h2 id="🤷‍♂️-is-the-qbox-ready-to-use" tabindex="-1">🤷‍♂️ Is the qbox ready to use? <a class="header-anchor" href="#🤷‍♂️-is-the-qbox-ready-to-use" aria-label="Permalink to &quot;🤷‍♂️ Is the qbox ready to use?&quot;">​</a></h2><div class="info custom-block"><p class="custom-block-title">It won&#39;t take too much of your time</p><p>Since qbx_core has backward compatibility with qb-core sources, we recommend using only published Qbox sources for a stable experience.</p></div><div class="language-lua vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">lua</span><pre class="shiki shiki-themes github-light ayu-dark vp-code"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#FF8F40;">return</span><span style="--shiki-light:#24292E;--shiki-dark:#BFBDB6;"> {</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#BFBDB6;">    serverName </span><span style="--shiki-light:#D73A49;--shiki-dark:#F29668;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#AAD94C;"> &#39;Server&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#BFBDB6;">,</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#BFBDB6;">    defaultSpawn </span><span style="--shiki-light:#D73A49;--shiki-dark:#F29668;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#F07178;"> vec4</span><span style="--shiki-light:#24292E;--shiki-dark:#BFBDB6;">(</span><span style="--shiki-light:#D73A49;--shiki-dark:#F29668;">-</span><span style="--shiki-light:#005CC5;--shiki-dark:#D2A6FF;">540.58</span><span style="--shiki-light:#24292E;--shiki-dark:#BFBDB6;">, </span><span style="--shiki-light:#D73A49;--shiki-dark:#F29668;">-</span><span style="--shiki-light:#005CC5;--shiki-dark:#D2A6FF;">212.02</span><span style="--shiki-light:#24292E;--shiki-dark:#BFBDB6;">, </span><span style="--shiki-light:#005CC5;--shiki-dark:#D2A6FF;">37.65</span><span style="--shiki-light:#24292E;--shiki-dark:#BFBDB6;">, </span><span style="--shiki-light:#005CC5;--shiki-dark:#D2A6FF;">208.88</span><span style="--shiki-light:#24292E;--shiki-dark:#BFBDB6;">),</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#BFBDB6;">    notifyPosition </span><span style="--shiki-light:#D73A49;--shiki-dark:#F29668;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#AAD94C;"> &#39;top-right&#39; </span><span style="--shiki-light:#6A737D;--shiki-dark:#ACB6BF8C;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic;">-- &#39;top&#39; | &#39;top-right&#39; | &#39;top-left&#39; | &#39;bottom&#39; | &#39;bottom-right&#39; | &#39;bottom-left&#39;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#BFBDB6;">}</span></span></code></pre></div><p>That is so funny! 😂</p><table><thead><tr><th>A short overview</th><th style="text-align:center;">QBCore</th><th style="text-align:right;">Qbox</th></tr></thead><tbody><tr><td>lightweight</td><td style="text-align:center;">🔧</td><td style="text-align:right;">✅</td></tr><tr><td>no lint errors are present</td><td style="text-align:center;">⭕</td><td style="text-align:right;">✅</td></tr><tr><td>readable and well organized</td><td style="text-align:center;">🔧</td><td style="text-align:right;">✅</td></tr><tr><td>modular structure</td><td style="text-align:center;">⭕</td><td style="text-align:right;">✅</td></tr><tr><td>no deprecated functions are being invoked</td><td style="text-align:center;">⭕</td><td style="text-align:right;">✅</td></tr></tbody></table>`,11),o=[r];function n(l,h,d,c,p,k){return s(),e("div",null,o)}const b=t(a,[["render",n]]);export{y as __pageData,b as default};
